name: Receptor CI/CD to Docker Hub

on:
  push:
    branches: [ devel ]
  pull_request:
    branches: [ devel ]


jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write

    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
        with:
          install: true
      -  
        name: Generate build ID
        id: prep
        run: |
          branch=${GITHUB_REF##*/}
          # sha=${GITHUB_SHA::8}
          # ts=$(date +%s)
          ts=$(date +%Y-%m-%d--%H-%M)
          echo "::set-output name=BUILD_ID::${branch}-${ts}"          
      - 
        name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: 'pypy3.9'
      - 
        name: Install dependencies
        run: |
          python3 -m pip install -U pip build virtualenv

      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - 
        name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - 
        name: Build container image
        run: |
          make container OFFICIAL_VERSION=yes CONTAINERCMD=docker REPO=docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }} VERSION=v1.2.3 

      - 
        name: Build Docker Manifest
        run: |
          docker manifest create docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest --amend docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:arm64 --amend docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:s390x --amend docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:amd64 

      - 
        name: Push Docker Manifest
        run: |
          docker manifest push docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest

      -   
        name : Docker Scan Image
        id: scan
        uses: anchore/scan-action@v3.2.5
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          fail-build: false
          acs-report-enable: true
      
      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.sarif }}

      # - name: Container image scan
      #   uses: Azure/container-scan@v0.1
      #   with:
      #     image-name: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          args: --file=packaging/container/Dockerfile

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

      # - uses: ncipollo/release-action@v1
      #   with:
      #     # artifacts: "release.tar.gz,foo/*.txt"
      #     # bodyFile: "body.md"
      #     token: ${{ secrets.GITHUB_TOKEN }}          
